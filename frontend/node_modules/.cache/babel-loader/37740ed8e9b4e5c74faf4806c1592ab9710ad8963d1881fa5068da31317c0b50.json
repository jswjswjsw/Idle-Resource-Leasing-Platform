{"ast":null,"code":"// 工具函数：合并类名\nimport { clsx } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\n/**\n * 合并 Tailwind CSS 类名的工具函数\n * @param inputs - 任意数量的类名参数\n * @returns 合并后的类名字符串\n */\nexport function cn(...inputs) {\n  return twMerge(clsx(inputs));\n}\n\n/**\n * 格式化价格显示\n * @param price - 价格数字\n * @param unit - 价格单位\n * @returns 格式化后的价格字符串\n */\nexport function formatPrice(price, unit = '元') {\n  return `¥${price.toFixed(2)}${unit}`;\n}\n\n/**\n * 格式化距离显示\n * @param meters - 距离（米）\n * @returns 格式化后的距离字符串\n */\nexport function formatDistance(meters) {\n  if (meters < 1000) {\n    return `${meters}米`;\n  }\n  return `${(meters / 1000).toFixed(1)}公里`;\n}\n\n/**\n * 格式化日期显示\n * @param dateString - 日期字符串\n * @returns 格式化后的日期字符串\n */\nexport function formatDate(dateString) {\n  const date = new Date(dateString);\n  const now = new Date();\n  const diffTime = Math.abs(now.getTime() - date.getTime());\n  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n  if (diffDays === 0) {\n    return '今天';\n  } else if (diffDays === 1) {\n    return '昨天';\n  } else if (diffDays < 7) {\n    return `${diffDays}天前`;\n  } else {\n    return date.toLocaleDateString('zh-CN', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit'\n    });\n  }\n}\n\n/**\n * 生成随机ID\n * @returns 随机生成的ID字符串\n */\nexport function generateId() {\n  return Math.random().toString(36).substr(2, 9);\n}\n\n/**\n * 防抖函数\n * @param func - 要执行的函数\n * @param delay - 延迟时间（毫秒）\n * @returns 防抖后的函数\n */\nexport function debounce(func, delay) {\n  let timeoutId;\n  return (...args) => {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => func(...args), delay);\n  };\n}\n\n/**\n * 节流函数\n * @param func - 要执行的函数\n * @param delay - 节流时间（毫秒）\n * @returns 节流后的函数\n */\nexport function throttle(func, delay) {\n  let lastCall = 0;\n  return (...args) => {\n    const now = Date.now();\n    if (now - lastCall >= delay) {\n      lastCall = now;\n      func(...args);\n    }\n  };\n}","map":{"version":3,"names":["clsx","twMerge","cn","inputs","formatPrice","price","unit","toFixed","formatDistance","meters","formatDate","dateString","date","Date","now","diffTime","Math","abs","getTime","diffDays","ceil","toLocaleDateString","year","month","day","generateId","random","toString","substr","debounce","func","delay","timeoutId","args","clearTimeout","setTimeout","throttle","lastCall"],"sources":["D:/project/trade/frontend/src/utils/cn.ts"],"sourcesContent":["// 工具函数：合并类名\nimport { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\n/**\n * 合并 Tailwind CSS 类名的工具函数\n * @param inputs - 任意数量的类名参数\n * @returns 合并后的类名字符串\n */\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\n/**\n * 格式化价格显示\n * @param price - 价格数字\n * @param unit - 价格单位\n * @returns 格式化后的价格字符串\n */\nexport function formatPrice(price: number, unit: string = '元'): string {\n  return `¥${price.toFixed(2)}${unit}`;\n}\n\n/**\n * 格式化距离显示\n * @param meters - 距离（米）\n * @returns 格式化后的距离字符串\n */\nexport function formatDistance(meters: number): string {\n  if (meters < 1000) {\n    return `${meters}米`;\n  }\n  return `${(meters / 1000).toFixed(1)}公里`;\n}\n\n/**\n * 格式化日期显示\n * @param dateString - 日期字符串\n * @returns 格式化后的日期字符串\n */\nexport function formatDate(dateString: string): string {\n  const date = new Date(dateString);\n  const now = new Date();\n  const diffTime = Math.abs(now.getTime() - date.getTime());\n  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n\n  if (diffDays === 0) {\n    return '今天';\n  } else if (diffDays === 1) {\n    return '昨天';\n  } else if (diffDays < 7) {\n    return `${diffDays}天前`;\n  } else {\n    return date.toLocaleDateString('zh-CN', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit'\n    });\n  }\n}\n\n/**\n * 生成随机ID\n * @returns 随机生成的ID字符串\n */\nexport function generateId(): string {\n  return Math.random().toString(36).substr(2, 9);\n}\n\n/**\n * 防抖函数\n * @param func - 要执行的函数\n * @param delay - 延迟时间（毫秒）\n * @returns 防抖后的函数\n */\nexport function debounce<T extends (...args: any[]) => any>(\n  func: T,\n  delay: number\n): (...args: Parameters<T>) => void {\n  let timeoutId: NodeJS.Timeout;\n  return (...args: Parameters<T>) => {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => func(...args), delay);\n  };\n}\n\n/**\n * 节流函数\n * @param func - 要执行的函数\n * @param delay - 节流时间（毫秒）\n * @returns 节流后的函数\n */\nexport function throttle<T extends (...args: any[]) => any>(\n  func: T,\n  delay: number\n): (...args: Parameters<T>) => void {\n  let lastCall = 0;\n  return (...args: Parameters<T>) => {\n    const now = Date.now();\n    if (now - lastCall >= delay) {\n      lastCall = now;\n      func(...args);\n    }\n  };\n}"],"mappings":"AAAA;AACA,SAASA,IAAI,QAAyB,MAAM;AAC5C,SAASC,OAAO,QAAQ,gBAAgB;;AAExC;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,EAAEA,CAAC,GAAGC,MAAoB,EAAE;EAC1C,OAAOF,OAAO,CAACD,IAAI,CAACG,MAAM,CAAC,CAAC;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,WAAWA,CAACC,KAAa,EAAEC,IAAY,GAAG,GAAG,EAAU;EACrE,OAAO,IAAID,KAAK,CAACE,OAAO,CAAC,CAAC,CAAC,GAAGD,IAAI,EAAE;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASE,cAAcA,CAACC,MAAc,EAAU;EACrD,IAAIA,MAAM,GAAG,IAAI,EAAE;IACjB,OAAO,GAAGA,MAAM,GAAG;EACrB;EACA,OAAO,GAAG,CAACA,MAAM,GAAG,IAAI,EAAEF,OAAO,CAAC,CAAC,CAAC,IAAI;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASG,UAAUA,CAACC,UAAkB,EAAU;EACrD,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC;EACjC,MAAMG,GAAG,GAAG,IAAID,IAAI,CAAC,CAAC;EACtB,MAAME,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAACH,GAAG,CAACI,OAAO,CAAC,CAAC,GAAGN,IAAI,CAACM,OAAO,CAAC,CAAC,CAAC;EACzD,MAAMC,QAAQ,GAAGH,IAAI,CAACI,IAAI,CAACL,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;EAE5D,IAAII,QAAQ,KAAK,CAAC,EAAE;IAClB,OAAO,IAAI;EACb,CAAC,MAAM,IAAIA,QAAQ,KAAK,CAAC,EAAE;IACzB,OAAO,IAAI;EACb,CAAC,MAAM,IAAIA,QAAQ,GAAG,CAAC,EAAE;IACvB,OAAO,GAAGA,QAAQ,IAAI;EACxB,CAAC,MAAM;IACL,OAAOP,IAAI,CAACS,kBAAkB,CAAC,OAAO,EAAE;MACtCC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,SAAS;MAChBC,GAAG,EAAE;IACP,CAAC,CAAC;EACJ;AACF;;AAEA;AACA;AACA;AACA;AACA,OAAO,SAASC,UAAUA,CAAA,EAAW;EACnC,OAAOT,IAAI,CAACU,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,QAAQA,CACtBC,IAAO,EACPC,KAAa,EACqB;EAClC,IAAIC,SAAyB;EAC7B,OAAO,CAAC,GAAGC,IAAmB,KAAK;IACjCC,YAAY,CAACF,SAAS,CAAC;IACvBA,SAAS,GAAGG,UAAU,CAAC,MAAML,IAAI,CAAC,GAAGG,IAAI,CAAC,EAAEF,KAAK,CAAC;EACpD,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASK,QAAQA,CACtBN,IAAO,EACPC,KAAa,EACqB;EAClC,IAAIM,QAAQ,GAAG,CAAC;EAChB,OAAO,CAAC,GAAGJ,IAAmB,KAAK;IACjC,MAAMnB,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC,CAAC;IACtB,IAAIA,GAAG,GAAGuB,QAAQ,IAAIN,KAAK,EAAE;MAC3BM,QAAQ,GAAGvB,GAAG;MACdgB,IAAI,CAAC,GAAGG,IAAI,CAAC;IACf;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}