{"ast":null,"code":"import{useState}from'react';import{useQuery,useMutation,useQueryClient,keepPreviousData}from'@tanstack/react-query';import{resourceService}from'../services/api';/**\n * 资源数据管理Hook\n * 提供资源的CRUD操作和数据获取功能\n */export const useResources=()=>{const queryClient=useQueryClient();// 获取资源列表\nconst useResourceList=function(filters){let page=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;let limit=arguments.length>2&&arguments[2]!==undefined?arguments[2]:20;return useQuery({queryKey:['resources',filters,page,limit],queryFn:()=>resourceService.getResources(filters,page,limit),placeholderData:keepPreviousData,staleTime:5*60*1000// 5分钟\n});};// 获取单个资源详情\nconst useResourceDetail=id=>{return useQuery({queryKey:['resource',id],queryFn:()=>resourceService.getResource(id),staleTime:2*60*1000// 2分钟\n});};// 获取用户资源\nconst useUserResources=function(userId){let page=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;let limit=arguments.length>2&&arguments[2]!==undefined?arguments[2]:20;return useQuery({queryKey:['user-resources',userId,page,limit],queryFn:()=>resourceService.getUserResources(userId,page,limit),enabled:!!userId});};// 搜索资源\nconst useResourceSearch=function(keyword,filters){let page=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;let limit=arguments.length>3&&arguments[3]!==undefined?arguments[3]:20;return useQuery({queryKey:['resource-search',keyword,filters,page,limit],queryFn:()=>resourceService.searchResources(keyword,filters,page,limit),enabled:!!keyword,placeholderData:keepPreviousData});};// 获取热门资源\nconst usePopularResources=function(){let limit=arguments.length>0&&arguments[0]!==undefined?arguments[0]:10;return useQuery({queryKey:['popular-resources',limit],queryFn:()=>resourceService.getPopularResources(limit),staleTime:10*60*1000// 10分钟\n});};// 获取推荐资源\nconst useRecommendedResources=function(){let limit=arguments.length>0&&arguments[0]!==undefined?arguments[0]:10;return useQuery({queryKey:['recommended-resources',limit],queryFn:()=>resourceService.getRecommendedResources(limit),staleTime:10*60*1000// 10分钟\n});};// 创建资源mutation\nconst createResourceMutation=useMutation({mutationFn:data=>resourceService.createResource(data),onSuccess:()=>{queryClient.invalidateQueries({queryKey:['resources']});queryClient.invalidateQueries({queryKey:['user-resources']});}});// 更新资源mutation\nconst updateResourceMutation=useMutation({mutationFn:_ref=>{let{id,data}=_ref;return resourceService.updateResource(id,data);},onSuccess:(data,variables)=>{queryClient.invalidateQueries({queryKey:['resources']});queryClient.invalidateQueries({queryKey:['resource',variables.id]});queryClient.invalidateQueries({queryKey:['user-resources']});}});// 删除资源mutation\nconst deleteResourceMutation=useMutation({mutationFn:id=>resourceService.deleteResource(id),onSuccess:()=>{queryClient.invalidateQueries({queryKey:['resources']});queryClient.invalidateQueries({queryKey:['user-resources']});}});return{useResourceList,useResourceDetail,useUserResources,useResourceSearch,usePopularResources,useRecommendedResources,createResource:createResourceMutation,updateResource:updateResourceMutation,deleteResource:deleteResourceMutation};};/**\n * 单个资源Hook\n * 用于管理单个资源的状态和操作\n */export const useResource=id=>{const queryClient=useQueryClient();const[isEditing,setIsEditing]=useState(false);// 获取资源详情\nconst{data:resource,isLoading,error}=useQuery({queryKey:['resource',id],queryFn:()=>resourceService.getResource(id),enabled:!!id});// 更新资源mutation\nconst updateResourceMutation=useMutation({mutationFn:data=>resourceService.updateResource(id,data),onSuccess:()=>{queryClient.invalidateQueries({queryKey:['resource',id]});setIsEditing(false);}});// 删除资源mutation\nconst deleteResourceMutation=useMutation({mutationFn:()=>resourceService.deleteResource(id),onSuccess:()=>{queryClient.invalidateQueries({queryKey:['resources']});queryClient.invalidateQueries({queryKey:['user-resources']});}});return{resource:resource===null||resource===void 0?void 0:resource.data,isLoading,error,isEditing,setIsEditing,updateResource:updateResourceMutation,deleteResource:deleteResourceMutation};};","map":{"version":3,"names":["useState","useQuery","useMutation","useQueryClient","keepPreviousData","resourceService","useResources","queryClient","useResourceList","filters","page","arguments","length","undefined","limit","queryKey","queryFn","getResources","placeholderData","staleTime","useResourceDetail","id","getResource","useUserResources","userId","getUserResources","enabled","useResourceSearch","keyword","searchResources","usePopularResources","getPopularResources","useRecommendedResources","getRecommendedResources","createResourceMutation","mutationFn","data","createResource","onSuccess","invalidateQueries","updateResourceMutation","_ref","updateResource","variables","deleteResourceMutation","deleteResource","useResource","isEditing","setIsEditing","resource","isLoading","error"],"sources":["D:/project/trade/frontend/src/hooks/useResources.ts"],"sourcesContent":["import { useState } from 'react';\nimport { useQuery, useMutation, useQueryClient, keepPreviousData } from '@tanstack/react-query';\nimport { Resource, SearchFilters, CreateResourceRequest, UpdateResourceRequest } from '../types';\nimport { resourceService } from '../services/api';\n\n/**\n * 资源数据管理Hook\n * 提供资源的CRUD操作和数据获取功能\n */\nexport const useResources = () => {\n  const queryClient = useQueryClient();\n\n  // 获取资源列表\n  const useResourceList = (filters?: SearchFilters, page: number = 1, limit: number = 20) => {\n    return useQuery({\n      queryKey: ['resources', filters, page, limit],\n      queryFn: () => resourceService.getResources(filters, page, limit),\n      placeholderData: keepPreviousData,\n      staleTime: 5 * 60 * 1000, // 5分钟\n    });\n  };\n\n  // 获取单个资源详情\n  const useResourceDetail = (id: string) => {\n    return useQuery({\n      queryKey: ['resource', id],\n      queryFn: () => resourceService.getResource(id),\n      staleTime: 2 * 60 * 1000, // 2分钟\n    });\n  };\n\n  // 获取用户资源\n  const useUserResources = (userId: string, page: number = 1, limit: number = 20) => {\n    return useQuery({\n      queryKey: ['user-resources', userId, page, limit],\n      queryFn: () => resourceService.getUserResources(userId, page, limit),\n      enabled: !!userId,\n    });\n  };\n\n  // 搜索资源\n  const useResourceSearch = (keyword: string, filters?: SearchFilters, page: number = 1, limit: number = 20) => {\n    return useQuery({\n      queryKey: ['resource-search', keyword, filters, page, limit],\n      queryFn: () => resourceService.searchResources(keyword, filters, page, limit),\n      enabled: !!keyword,\n      placeholderData: keepPreviousData,\n    });\n  };\n\n  // 获取热门资源\n  const usePopularResources = (limit: number = 10) => {\n    return useQuery({\n      queryKey: ['popular-resources', limit],\n      queryFn: () => resourceService.getPopularResources(limit),\n      staleTime: 10 * 60 * 1000, // 10分钟\n    });\n  };\n\n  // 获取推荐资源\n  const useRecommendedResources = (limit: number = 10) => {\n    return useQuery({\n      queryKey: ['recommended-resources', limit],\n      queryFn: () => resourceService.getRecommendedResources(limit),\n      staleTime: 10 * 60 * 1000, // 10分钟\n    });\n  };\n\n  // 创建资源mutation\n  const createResourceMutation = useMutation({\n    mutationFn: (data: CreateResourceRequest) => resourceService.createResource(data),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['resources'] });\n      queryClient.invalidateQueries({ queryKey: ['user-resources'] });\n    },\n  });\n\n  // 更新资源mutation\n  const updateResourceMutation = useMutation({\n    mutationFn: ({ id, data }: { id: string; data: UpdateResourceRequest }) => resourceService.updateResource(id, data),\n    onSuccess: (data, variables) => {\n      queryClient.invalidateQueries({ queryKey: ['resources'] });\n      queryClient.invalidateQueries({ queryKey: ['resource', variables.id] });\n      queryClient.invalidateQueries({ queryKey: ['user-resources'] });\n    },\n  });\n\n  // 删除资源mutation\n  const deleteResourceMutation = useMutation({\n    mutationFn: (id: string) => resourceService.deleteResource(id),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['resources'] });\n      queryClient.invalidateQueries({ queryKey: ['user-resources'] });\n    },\n  });\n\n  return {\n    useResourceList,\n    useResourceDetail,\n    useUserResources,\n    useResourceSearch,\n    usePopularResources,\n    useRecommendedResources,\n    createResource: createResourceMutation,\n    updateResource: updateResourceMutation,\n    deleteResource: deleteResourceMutation,\n  };\n};\n\n/**\n * 单个资源Hook\n * 用于管理单个资源的状态和操作\n */\nexport const useResource = (id: string) => {\n  const queryClient = useQueryClient();\n  const [isEditing, setIsEditing] = useState(false);\n\n  // 获取资源详情\n  const { data: resource, isLoading, error } = useQuery({\n    queryKey: ['resource', id],\n    queryFn: () => resourceService.getResource(id),\n    enabled: !!id,\n  });\n\n  // 更新资源mutation\n  const updateResourceMutation = useMutation({\n    mutationFn: (data: UpdateResourceRequest) => resourceService.updateResource(id, data),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['resource', id] });\n      setIsEditing(false);\n    },\n  });\n\n  // 删除资源mutation\n  const deleteResourceMutation = useMutation({\n    mutationFn: () => resourceService.deleteResource(id),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['resources'] });\n      queryClient.invalidateQueries({ queryKey: ['user-resources'] });\n    },\n  });\n\n  return {\n    resource: resource?.data,\n    isLoading,\n    error,\n    isEditing,\n    setIsEditing,\n    updateResource: updateResourceMutation,\n    deleteResource: deleteResourceMutation,\n  };\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}