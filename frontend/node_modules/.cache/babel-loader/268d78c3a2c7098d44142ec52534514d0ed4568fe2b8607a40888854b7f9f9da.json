{"ast":null,"code":"var _s7 = $RefreshSig$(),\n  _s8 = $RefreshSig$();\nimport { useState } from 'react';\nimport { useQuery, useMutation, useQueryClient, keepPreviousData } from '@tanstack/react-query';\nimport { resourceService } from '../services/api';\n\n/**\n * 资源数据管理Hook\n * 提供资源的CRUD操作和数据获取功能\n */\nexport const useResources = () => {\n  _s7();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$();\n  const queryClient = useQueryClient();\n\n  // 获取资源列表\n  const useResourceList = (filters, page = 1, limit = 20) => {\n    _s();\n    return useQuery({\n      queryKey: ['resources', filters, page, limit],\n      queryFn: () => resourceService.getResources(filters, page, limit),\n      placeholderData: keepPreviousData,\n      staleTime: 5 * 60 * 1000 // 5分钟\n    });\n  };\n\n  // 获取单个资源详情\n  _s(useResourceList, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n    return [useQuery];\n  });\n  const useResourceDetail = id => {\n    _s2();\n    return useQuery({\n      queryKey: ['resource', id],\n      queryFn: () => resourceService.getResource(id),\n      staleTime: 2 * 60 * 1000 // 2分钟\n    });\n  };\n\n  // 获取用户资源\n  _s2(useResourceDetail, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n    return [useQuery];\n  });\n  const useUserResources = (userId, page = 1, limit = 20) => {\n    _s3();\n    return useQuery({\n      queryKey: ['user-resources', userId, page, limit],\n      queryFn: () => resourceService.getUserResources(userId, page, limit),\n      enabled: !!userId\n    });\n  };\n\n  // 搜索资源\n  _s3(useUserResources, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n    return [useQuery];\n  });\n  const useResourceSearch = (keyword, filters, page = 1, limit = 20) => {\n    _s4();\n    return useQuery({\n      queryKey: ['resource-search', keyword, filters, page, limit],\n      queryFn: () => resourceService.searchResources(keyword, filters, page, limit),\n      enabled: !!keyword,\n      placeholderData: keepPreviousData\n    });\n  };\n\n  // 获取热门资源\n  _s4(useResourceSearch, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n    return [useQuery];\n  });\n  const usePopularResources = (limit = 10) => {\n    _s5();\n    return useQuery({\n      queryKey: ['popular-resources', limit],\n      queryFn: () => resourceService.getPopularResources(limit),\n      staleTime: 10 * 60 * 1000 // 10分钟\n    });\n  };\n\n  // 获取推荐资源\n  _s5(usePopularResources, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n    return [useQuery];\n  });\n  const useRecommendedResources = (limit = 10) => {\n    _s6();\n    return useQuery({\n      queryKey: ['recommended-resources', limit],\n      queryFn: () => resourceService.getRecommendedResources(limit),\n      staleTime: 10 * 60 * 1000 // 10分钟\n    });\n  };\n\n  // 创建资源mutation\n  _s6(useRecommendedResources, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n    return [useQuery];\n  });\n  const createResourceMutation = useMutation({\n    mutationFn: data => resourceService.createResource(data),\n    onSuccess: () => {\n      queryClient.invalidateQueries({\n        queryKey: ['resources']\n      });\n      queryClient.invalidateQueries({\n        queryKey: ['user-resources']\n      });\n    }\n  });\n\n  // 更新资源mutation\n  const updateResourceMutation = useMutation({\n    mutationFn: ({\n      id,\n      data\n    }) => resourceService.updateResource(id, data),\n    onSuccess: (data, variables) => {\n      queryClient.invalidateQueries({\n        queryKey: ['resources']\n      });\n      queryClient.invalidateQueries({\n        queryKey: ['resource', variables.id]\n      });\n      queryClient.invalidateQueries({\n        queryKey: ['user-resources']\n      });\n    }\n  });\n\n  // 删除资源mutation\n  const deleteResourceMutation = useMutation({\n    mutationFn: id => resourceService.deleteResource(id),\n    onSuccess: () => {\n      queryClient.invalidateQueries({\n        queryKey: ['resources']\n      });\n      queryClient.invalidateQueries({\n        queryKey: ['user-resources']\n      });\n    }\n  });\n  return {\n    useResourceList,\n    useResourceDetail,\n    useUserResources,\n    useResourceSearch,\n    usePopularResources,\n    useRecommendedResources,\n    createResource: createResourceMutation,\n    updateResource: updateResourceMutation,\n    deleteResource: deleteResourceMutation\n  };\n};\n\n/**\n * 单个资源Hook\n * 用于管理单个资源的状态和操作\n */\n_s7(useResources, \"sewEpjUeY9mKnvK9ki5hf5fG6PU=\", false, function () {\n  return [useQueryClient, useMutation, useMutation, useMutation];\n});\nexport const useResource = id => {\n  _s8();\n  const queryClient = useQueryClient();\n  const [isEditing, setIsEditing] = useState(false);\n\n  // 获取资源详情\n  const {\n    data: resource,\n    isLoading,\n    error\n  } = useQuery({\n    queryKey: ['resource', id],\n    queryFn: () => resourceService.getResource(id),\n    enabled: !!id\n  });\n\n  // 更新资源mutation\n  const updateResourceMutation = useMutation({\n    mutationFn: data => resourceService.updateResource(id, data),\n    onSuccess: () => {\n      queryClient.invalidateQueries({\n        queryKey: ['resource', id]\n      });\n      setIsEditing(false);\n    }\n  });\n\n  // 删除资源mutation\n  const deleteResourceMutation = useMutation({\n    mutationFn: () => resourceService.deleteResource(id),\n    onSuccess: () => {\n      queryClient.invalidateQueries({\n        queryKey: ['resources']\n      });\n      queryClient.invalidateQueries({\n        queryKey: ['user-resources']\n      });\n    }\n  });\n  return {\n    resource: resource === null || resource === void 0 ? void 0 : resource.data,\n    isLoading,\n    error,\n    isEditing,\n    setIsEditing,\n    updateResource: updateResourceMutation,\n    deleteResource: deleteResourceMutation\n  };\n};\n_s8(useResource, \"FXpkpGcR82jeZwUJ0y7vIC9Lxto=\", false, function () {\n  return [useQueryClient, useQuery, useMutation, useMutation];\n});","map":{"version":3,"names":["useState","useQuery","useMutation","useQueryClient","keepPreviousData","resourceService","useResources","_s7","_s","$RefreshSig$","_s2","_s3","_s4","_s5","_s6","queryClient","useResourceList","filters","page","limit","queryKey","queryFn","getResources","placeholderData","staleTime","useResourceDetail","id","getResource","useUserResources","userId","getUserResources","enabled","useResourceSearch","keyword","searchResources","usePopularResources","getPopularResources","useRecommendedResources","getRecommendedResources","createResourceMutation","mutationFn","data","createResource","onSuccess","invalidateQueries","updateResourceMutation","updateResource","variables","deleteResourceMutation","deleteResource","useResource","_s8","isEditing","setIsEditing","resource","isLoading","error"],"sources":["D:/project/trade/frontend/src/hooks/useResources.ts"],"sourcesContent":["import { useState } from 'react';\nimport { useQuery, useMutation, useQueryClient, keepPreviousData } from '@tanstack/react-query';\nimport { Resource, SearchFilters, CreateResourceRequest, UpdateResourceRequest } from '../types';\nimport { resourceService } from '../services/api';\n\n/**\n * 资源数据管理Hook\n * 提供资源的CRUD操作和数据获取功能\n */\nexport const useResources = () => {\n  const queryClient = useQueryClient();\n\n  // 获取资源列表\n  const useResourceList = (filters?: SearchFilters, page: number = 1, limit: number = 20) => {\n    return useQuery({\n      queryKey: ['resources', filters, page, limit],\n      queryFn: () => resourceService.getResources(filters, page, limit),\n      placeholderData: keepPreviousData,\n      staleTime: 5 * 60 * 1000, // 5分钟\n    });\n  };\n\n  // 获取单个资源详情\n  const useResourceDetail = (id: string) => {\n    return useQuery({\n      queryKey: ['resource', id],\n      queryFn: () => resourceService.getResource(id),\n      staleTime: 2 * 60 * 1000, // 2分钟\n    });\n  };\n\n  // 获取用户资源\n  const useUserResources = (userId: string, page: number = 1, limit: number = 20) => {\n    return useQuery({\n      queryKey: ['user-resources', userId, page, limit],\n      queryFn: () => resourceService.getUserResources(userId, page, limit),\n      enabled: !!userId,\n    });\n  };\n\n  // 搜索资源\n  const useResourceSearch = (keyword: string, filters?: SearchFilters, page: number = 1, limit: number = 20) => {\n    return useQuery({\n      queryKey: ['resource-search', keyword, filters, page, limit],\n      queryFn: () => resourceService.searchResources(keyword, filters, page, limit),\n      enabled: !!keyword,\n      placeholderData: keepPreviousData,\n    });\n  };\n\n  // 获取热门资源\n  const usePopularResources = (limit: number = 10) => {\n    return useQuery({\n      queryKey: ['popular-resources', limit],\n      queryFn: () => resourceService.getPopularResources(limit),\n      staleTime: 10 * 60 * 1000, // 10分钟\n    });\n  };\n\n  // 获取推荐资源\n  const useRecommendedResources = (limit: number = 10) => {\n    return useQuery({\n      queryKey: ['recommended-resources', limit],\n      queryFn: () => resourceService.getRecommendedResources(limit),\n      staleTime: 10 * 60 * 1000, // 10分钟\n    });\n  };\n\n  // 创建资源mutation\n  const createResourceMutation = useMutation({\n    mutationFn: (data: CreateResourceRequest) => resourceService.createResource(data),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['resources'] });\n      queryClient.invalidateQueries({ queryKey: ['user-resources'] });\n    },\n  });\n\n  // 更新资源mutation\n  const updateResourceMutation = useMutation({\n    mutationFn: ({ id, data }: { id: string; data: UpdateResourceRequest }) => resourceService.updateResource(id, data),\n    onSuccess: (data, variables) => {\n      queryClient.invalidateQueries({ queryKey: ['resources'] });\n      queryClient.invalidateQueries({ queryKey: ['resource', variables.id] });\n      queryClient.invalidateQueries({ queryKey: ['user-resources'] });\n    },\n  });\n\n  // 删除资源mutation\n  const deleteResourceMutation = useMutation({\n    mutationFn: (id: string) => resourceService.deleteResource(id),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['resources'] });\n      queryClient.invalidateQueries({ queryKey: ['user-resources'] });\n    },\n  });\n\n  return {\n    useResourceList,\n    useResourceDetail,\n    useUserResources,\n    useResourceSearch,\n    usePopularResources,\n    useRecommendedResources,\n    createResource: createResourceMutation,\n    updateResource: updateResourceMutation,\n    deleteResource: deleteResourceMutation,\n  };\n};\n\n/**\n * 单个资源Hook\n * 用于管理单个资源的状态和操作\n */\nexport const useResource = (id: string) => {\n  const queryClient = useQueryClient();\n  const [isEditing, setIsEditing] = useState(false);\n\n  // 获取资源详情\n  const { data: resource, isLoading, error } = useQuery({\n    queryKey: ['resource', id],\n    queryFn: () => resourceService.getResource(id),\n    enabled: !!id,\n  });\n\n  // 更新资源mutation\n  const updateResourceMutation = useMutation({\n    mutationFn: (data: UpdateResourceRequest) => resourceService.updateResource(id, data),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['resource', id] });\n      setIsEditing(false);\n    },\n  });\n\n  // 删除资源mutation\n  const deleteResourceMutation = useMutation({\n    mutationFn: () => resourceService.deleteResource(id),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['resources'] });\n      queryClient.invalidateQueries({ queryKey: ['user-resources'] });\n    },\n  });\n\n  return {\n    resource: resource?.data,\n    isLoading,\n    error,\n    isEditing,\n    setIsEditing,\n    updateResource: updateResourceMutation,\n    deleteResource: deleteResourceMutation,\n  };\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}