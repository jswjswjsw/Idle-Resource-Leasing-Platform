version: '3.8'

services:
  # PostgreSQL 数据库（开发）
  postgres:
    image: postgres:15-alpine
    container_name: trade-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: trade_dev
      POSTGRES_USER: dev_user
      POSTGRES_PASSWORD: dev_password
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - \"5432:5432\"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - trade-dev-network

  # Redis 缓存（开发）
  redis:
    image: redis:7-alpine
    container_name: trade-redis-dev
    restart: unless-stopped
    ports:
      - \"6379:6379\"
    volumes:
      - redis_dev_data:/data
    networks:
      - trade-dev-network

  # 后端服务（开发模式）
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: builder
    container_name: trade-backend-dev
    restart: unless-stopped
    ports:
      - \"3001:3001\"
      - \"9229:9229\"  # Node.js 调试端口
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://dev_user:dev_password@postgres:5432/trade_dev
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=dev-secret-key
      - JWT_EXPIRES_IN=7d
      - FRONTEND_URL=http://localhost:3000
      - LOG_LEVEL=debug
      - ENABLE_FILE_LOGGING=true
    volumes:
      - ./backend:/app
      - /app/node_modules
      - /app/dist
      - backend_dev_logs:/app/logs
      - backend_dev_uploads:/app/uploads
    command: npm run dev
    depends_on:
      - postgres
      - redis
    networks:
      - trade-dev-network

  # 前端服务（开发模式）
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: trade-frontend-dev
    restart: unless-stopped
    ports:
      - \"3000:3000\"
    environment:
      - REACT_APP_API_URL=http://localhost:3001/api
      - REACT_APP_WS_URL=http://localhost:3001
      - REACT_APP_ENV=development
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./frontend:/app
      - /app/node_modules
    stdin_open: true
    tty: true
    depends_on:
      - backend
    networks:
      - trade-dev-network

  # 数据库管理工具
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: trade-pgadmin-dev
    restart: unless-stopped
    ports:
      - \"8080:80\"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@trade.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_dev_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - trade-dev-network

  # Redis 管理工具
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: trade-redis-commander-dev
    restart: unless-stopped
    ports:
      - \"8081:8081\"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis
    networks:
      - trade-dev-network

# 开发环境数据卷
volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  backend_dev_logs:
    driver: local
  backend_dev_uploads:
    driver: local
  pgadmin_dev_data:
    driver: local

# 开发环境网络
networks:
  trade-dev-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16