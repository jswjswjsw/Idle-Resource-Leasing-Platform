{"ast":null,"code":"// 工具函数：合并类名\nimport{clsx}from'clsx';import{twMerge}from'tailwind-merge';/**\n * 合并 Tailwind CSS 类名的工具函数\n * @param inputs - 任意数量的类名参数\n * @returns 合并后的类名字符串\n */export function cn(){for(var _len=arguments.length,inputs=new Array(_len),_key=0;_key<_len;_key++){inputs[_key]=arguments[_key];}return twMerge(clsx(inputs));}/**\n * 格式化价格显示\n * @param price - 价格数字\n * @param unit - 价格单位\n * @returns 格式化后的价格字符串\n */export function formatPrice(price){let unit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'元';return\"\\xA5\".concat(price.toFixed(2)).concat(unit);}/**\n * 格式化距离显示\n * @param meters - 距离（米）\n * @returns 格式化后的距离字符串\n */export function formatDistance(meters){if(meters<1000){return\"\".concat(meters,\"\\u7C73\");}return\"\".concat((meters/1000).toFixed(1),\"\\u516C\\u91CC\");}/**\n * 格式化日期显示\n * @param dateString - 日期字符串\n * @returns 格式化后的日期字符串\n */export function formatDate(dateString){const date=new Date(dateString);const now=new Date();const diffTime=Math.abs(now.getTime()-date.getTime());const diffDays=Math.ceil(diffTime/(1000*60*60*24));if(diffDays===0){return'今天';}else if(diffDays===1){return'昨天';}else if(diffDays<7){return\"\".concat(diffDays,\"\\u5929\\u524D\");}else{return date.toLocaleDateString('zh-CN',{year:'numeric',month:'2-digit',day:'2-digit'});}}/**\n * 生成随机ID\n * @returns 随机生成的ID字符串\n */export function generateId(){return Math.random().toString(36).substr(2,9);}/**\n * 防抖函数\n * @param func - 要执行的函数\n * @param delay - 延迟时间（毫秒）\n * @returns 防抖后的函数\n */export function debounce(func,delay){let timeoutId;return function(){for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++){args[_key2]=arguments[_key2];}clearTimeout(timeoutId);timeoutId=setTimeout(()=>func(...args),delay);};}/**\n * 节流函数\n * @param func - 要执行的函数\n * @param delay - 节流时间（毫秒）\n * @returns 节流后的函数\n */export function throttle(func,delay){let lastCall=0;return function(){const now=Date.now();if(now-lastCall>=delay){lastCall=now;func(...arguments);}};}","map":{"version":3,"names":["clsx","twMerge","cn","_len","arguments","length","inputs","Array","_key","formatPrice","price","unit","undefined","concat","toFixed","formatDistance","meters","formatDate","dateString","date","Date","now","diffTime","Math","abs","getTime","diffDays","ceil","toLocaleDateString","year","month","day","generateId","random","toString","substr","debounce","func","delay","timeoutId","_len2","args","_key2","clearTimeout","setTimeout","throttle","lastCall"],"sources":["D:/project/trade/frontend/src/utils/cn.ts"],"sourcesContent":["// 工具函数：合并类名\nimport { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\n/**\n * 合并 Tailwind CSS 类名的工具函数\n * @param inputs - 任意数量的类名参数\n * @returns 合并后的类名字符串\n */\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\n/**\n * 格式化价格显示\n * @param price - 价格数字\n * @param unit - 价格单位\n * @returns 格式化后的价格字符串\n */\nexport function formatPrice(price: number, unit: string = '元'): string {\n  return `¥${price.toFixed(2)}${unit}`;\n}\n\n/**\n * 格式化距离显示\n * @param meters - 距离（米）\n * @returns 格式化后的距离字符串\n */\nexport function formatDistance(meters: number): string {\n  if (meters < 1000) {\n    return `${meters}米`;\n  }\n  return `${(meters / 1000).toFixed(1)}公里`;\n}\n\n/**\n * 格式化日期显示\n * @param dateString - 日期字符串\n * @returns 格式化后的日期字符串\n */\nexport function formatDate(dateString: string): string {\n  const date = new Date(dateString);\n  const now = new Date();\n  const diffTime = Math.abs(now.getTime() - date.getTime());\n  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n\n  if (diffDays === 0) {\n    return '今天';\n  } else if (diffDays === 1) {\n    return '昨天';\n  } else if (diffDays < 7) {\n    return `${diffDays}天前`;\n  } else {\n    return date.toLocaleDateString('zh-CN', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit'\n    });\n  }\n}\n\n/**\n * 生成随机ID\n * @returns 随机生成的ID字符串\n */\nexport function generateId(): string {\n  return Math.random().toString(36).substr(2, 9);\n}\n\n/**\n * 防抖函数\n * @param func - 要执行的函数\n * @param delay - 延迟时间（毫秒）\n * @returns 防抖后的函数\n */\nexport function debounce<T extends (...args: any[]) => any>(\n  func: T,\n  delay: number\n): (...args: Parameters<T>) => void {\n  let timeoutId: NodeJS.Timeout;\n  return (...args: Parameters<T>) => {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => func(...args), delay);\n  };\n}\n\n/**\n * 节流函数\n * @param func - 要执行的函数\n * @param delay - 节流时间（毫秒）\n * @returns 节流后的函数\n */\nexport function throttle<T extends (...args: any[]) => any>(\n  func: T,\n  delay: number\n): (...args: Parameters<T>) => void {\n  let lastCall = 0;\n  return (...args: Parameters<T>) => {\n    const now = Date.now();\n    if (now - lastCall >= delay) {\n      lastCall = now;\n      func(...args);\n    }\n  };\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}